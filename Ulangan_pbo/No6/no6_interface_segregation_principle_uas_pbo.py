# -*- coding: utf-8 -*-
"""No6_Interface Segregation Principle_UAS PBO.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11UkrikZBzk0vYs8btMW1Id3bHStntEZC
"""

# Interface Segregation Principle (ISP)

class Document:
    def open(self):
        pass
    
    def close(self):
        pass
    
    def save(self):
        pass
    
    def print(self):
        pass

class TextEditor(Document):
    def open(self):
        print("Opening document...")
    
    def close(self):
        print("Closing document...")
    
    def save(self):
        print("Saving document...")

class PrintManager(Document):
    def print(self):
        print("Printing document...")

# Dalam contoh di atas, kelas Document memiliki 
# empat method: open, close, save, dan print. 
# Namun, kelas TextEditor hanya membutuhkan method open, close, dan save, 
# sementara kelas PrintManager hanya membutuhkan method print. 
# Dengan demikian, kedua kelas tersebut tidak memiliki kebutuhan 
# terhadap semua method yang ada di kelas Document.

# Untuk memperbaiki ini, kita bisa membuat interface yang lebih spesifik 
# untuk setiap kelas, seperti berikut:

class TextEditorInterface:
    def open(self):
        pass
    
    def close(self):
        pass
    
    def save(self):
        pass

class PrintManagerInterface:
    def print(self):
        pass

class TextEditor(TextEditorInterface):
    def open(self):
        print("Opening document...")
    
    def close(self):
        print("Closing document...")
    
    def save(self):
        print("Saving document...")

class PrintManager(PrintManagerInterface):
    def print(self):
        print("Printing document...")
        
# Dengan demikian, kelas TextEditor dan PrintManager 
# tidak perlu mengimplementasikan method yang tidak mereka butuhkan, 
# sehingga sesuai dengan prinsip ISP.