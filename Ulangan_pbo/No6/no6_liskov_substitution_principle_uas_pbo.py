# -*- coding: utf-8 -*-
"""No6_Liskov Substitution Principle_UAS PBO.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WlUcY-vws5tDyoBkrMgPloqFs3dJllAx
"""

# Liskov Substitution Principle (LSP)

class Rectangle:
    def __init__(self, width, height):
        self.width = width
        self.height = height
    
    def area(self):
        return self.width * self.height
    
class Square(Rectangle):
    def __init__(self, side):
        self.width = side
        self.height = side
# Dalam contoh di atas, kelas Square merupakan subclass dari kelas Rectangle. 
# Namun, karena Square hanya memiliki satu sisi, maka saat menghitung luasnya 
# tidak menggunakan width dan height, tapi hanya menggunakan satu sisi. 
# Ini akan menyebabkan masalah jika kita menggunakan kelas Square 
# di tempat kelas Rectangle, karena hasil yang diharapkan tidak sesuai dengan yang sebenarnya.

#Untuk memperbaiki ini, kita bisa mengubah implementasi kelas Square seperti berikut:

class Square(Rectangle):
    def __init__(self, side):
        self.width = side
        self.height = side
    
    def set_width(self, width):
        self.width = width
        self.height = width
    
    def set_height(self, height):
        self.width = height
        self.height = height
        
# Dengan demikian, kelas Square sudah sesuai dengan prinsip LSP karena tidak mengubah comportement kelas Rectangle.